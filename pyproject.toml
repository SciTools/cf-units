[project]
name = "cf-units"
dynamic = ["version"]
description = "Units of measure as required by the Climate and Forecast (CF) Metadata Conventions"
requires-python = ">=3.10"
readme = "README.md"
dependencies = [
     'python>=3.8',
     'cftime>=1.6',
     'Jinja2>=3',
     'numpy>=1.18',
     'antlr4-python3-runtime==4.11.1',
]

[project.optional-dependencies]
build = [
      'Cython>=3',
      'meson-python>=0.15.0',
      'pytest>=7',
      'spin>=0.8',
]

[build-system]
requires = ['meson-python', 'cython']
build-backend = 'mesonpy'

[tool.coverage.run]
branch = true
plugins = [
    "Cython.Coverage"
]
include = [
    "cf_units/*"
]
omit = [
    "cf_units/etc/*",
    "cf_units/tests/*",
    "cf_units/_udunits2_parser/parser/*",
    "cf_units/_udunits2_parser/compile.py",
    ".eggs"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:"
]

[tool.setuptools_scm]
write_to = "cf_units/_version.py"
local_scheme = "dirty-tag"

[tool.black]
line-length = 79
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | _version.py
)
'''

[tool.isort]
known_first_party = "cf_units"
line_length = 79
profile = "black"
skip_gitignore = "True"
verbose = "False"

[tool.spin]
package = 'cf_units'

[tool.spin.commands]
Build = [
    'spin.cmds.meson.build',
    'spin.cmds.meson.test',
    'spin.cmds.build.sdist',
]
Environments = [
    'spin.cmds.meson.run',
    'spin.cmds.meson.python',
]

[tool.pytest.ini_options]
addopts = "-ra -v --doctest-modules"
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS NUMBER"
minversion = "6.0"
