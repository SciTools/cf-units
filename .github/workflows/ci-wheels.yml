name: ci-wheels

on:
  workflow_dispatch:
  push:
  pull_request:


jobs:
  build_bdist:
    name: "Build binary wheel distribution on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [auto64]
        include:
          - os: ubuntu-latest
            arch: aarch64

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: "Configure QEMU"
      if: ${{ matrix.arch == 'aarch64' }}
      uses: docker/setup-qemu-action@v1

    - name: "Build bdist"
      uses: pypa/cibuildwheel@v2.3.1
      env:
        CIBW_SKIP: "cp36-* cp37-* pp* *-musllinux*"
        CIBW_ARCHS: ${{ matrix.arch }}
        CIBW_BUILD_FRONTEND: build
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_BEFORE_BUILD_LINUX: yum install -y udunits2-devel
        UDUNITS2_INCDIR: /usr/include/udunits2
        UDUNITS2_LIBDIR: /usr/lib64
        UDUNITS2_XML_PATH: /usr/share/udunits/udunits2.xml
        CIBW_ENVIRONMENT_PASS_LINUX: UDUNITS2_INCDIR UDUNITS2_LIBDIR UDUNITS2_XML_PATH

    - uses: actions/upload-artifact@v2
      with:
        name: pypi-artifacts
        path: ${{ github.workspace }}/wheelhouse/*.whl


  build_sdist:
    name: "Build source distribution"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: "Build sdist"
      run: |
        pipx run build --sdist 

    - uses: actions/upload-artifact@v2
      with:
        name: pypi-artifacts
        path: ${{ github.workspace }}/dist/*.tar.gz


  debug:
    needs: [build_bdist, build_sdist]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: pypi-artifacts
        path: ${{ github.workspace }}/dist

    - name: "Show artifacts" 
      run: |
        ls -l ${{ github.workspace }}/dist

