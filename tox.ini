[tox]
requires =
    tox-conda
    tox-run-command
 
 
[testenv:py{38,39,310}-lock]
allowlist_externals =
    cp
changedir =
    {env:LOCKDIR}
conda_channels =
    conda-forge
conda_create_args =
    --override-channels
conda_deps =
    pip
    conda-lock
description =
    Create explicit environment specification conda lock files for cf-units dependencies.
platform =
    linux|darwin
setenv =
    LOCKDIR = {toxinidir}{/}requirements{/}locks
    TMPFILE = {envtmpdir}{/}cf-units.yml
    YMLFILE = {toxinidir}{/}requirements{/}cf-units.yml
skip_install =
    true
commands =
    cp {env:YMLFILE} {env:TMPFILE}
    python -c 'from sys import version_info as v; fh = open("{env:TMPFILE}", "a"); fh.write(f"\n  - python =\{v.major\}.\{v.minor\}\n")'
    conda-lock --channel conda-forge --kind explicit --file {env:TMPFILE} --platform linux-64 --filename-template "{envname}-\{platform\}.txt" {posargs}


[testenv:py{38,39,310}-{linux,osx,win}-test]
conda_spec =
    py38-linux: {toxinidir}{/}requirements{/}locks{/}py38-lock-linux-64.txt
    py39-linux: {toxinidir}{/}requirements{/}locks{/}py39-lock-linux-64.txt
    py310-linux: {toxinidir}{/}requirements{/}locks{/}py310-lock-linux-64.txt
    py38-osx: {toxinidir}{/}requirements{/}locks{/}py38-lock-osx-64.txt
    py39-osx: {toxinidir}{/}requirements{/}locks{/}py39-lock-osx-64.txt
    py310-osx: {toxinidir}{/}requirements{/}locks{/}py310-lock-osx-64.txt
    py38-win: {toxinidir}{/}requirements{/}locks{/}py38-lock-win-64.txt
    py39-win: {toxinidir}{/}requirements{/}locks{/}py39-lock-win-64.txt
    py310-win: {toxinidir}{/}requirements{/}locks{/}py310-lock-win-64.txt
description =
    Perform cf-units unit/integration tests.
passenv =
    CODECOV_TOKEN
    CYTHON_COVERAGE
    POST_COMMAND
usedevelop =
    true
commands =
    pytest {posargs}
    {env:POST_COMMAND:}
